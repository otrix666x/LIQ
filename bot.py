import telebot
from telebot import types
import sqlite3
import time
import random
import datetime
import config, text, keyboard
from datetime import datetime, datetime, timedelta
from pyqiwip2p import QiwiP2P
from pyqiwip2p.types import QiwiCustomer, QiwiDatetime
import requests

#p2p = QiwiP2P(auth_key=config.QIWI_PRIV_KEY)

bot = telebot.TeleBot(config.token)
ref_link = 'https://telegram.me/{}?start={}'

part_ref = 'https://telegram.me/{}?start={}_{}'


@bot.message_handler(commands=['start'])
def start_message(message):
   
    connect = sqlite3.connect('bot.db')
    q = connect.cursor()

    q.execute("""CREATE TABLE IF NOT EXISTS ugc_users(
        id TEXT, usr_name TEXT, data_reg TEXT
    )""")

    q.execute("""CREATE TABLE IF NOT EXISTS profile_info (
        id TEXT, balance INTEGER, count_referal INTEGER,ref TEXT,refs TEXT, ref_link TEXT
    )""")

    q.execute("""CREATE TABLE IF NOT EXISTS info_deposit (
        id TEXT, deposit_to_maining TEXT, deposit_to_traiding TEXT
    )""")
    q.execute("""CREATE TABLE IF NOT EXISTS info_vuvod (
        id TEXT,chat_id INTEGER DEFAULT 0, summ INTEGER, requisites TEXT
    )""")
    q.execute("""CREATE TABLE IF NOT EXISTS info_btc (
        id TEXT, summ INTEGER, user TEXT
    )""")
    q.execute("""CREATE TABLE IF NOT EXISTS info_partner (
        id TEXT, cnt_ref INTEGER, partner_link TEXT
    )""")
    q.execute("""CREATE TABLE IF NOT EXISTS trans (
        id INTEGER PRIMARY KEY,zayavka TEXT, data1 TEXT, summ TEXT
    )""")
    q.execute("""CREATE TABLE IF NOT EXISTS payment_check(
        id TEXT, bill TEXT
    )""")
    q.execute('''CREATE TABLE IF NOT EXISTS qiwi_key(
        qiwi TEXT
    )''')
    

    connect.commit
    userid = str(message.chat.id)
    username = str(message.from_user.username)
    row = q.execute('SELECT * FROM ugc_users WHERE id IS ' + str(userid)).fetchone()
    row1 = q.execute(f"SELECT id FROM profile_info where id = '{userid}'").fetchone()
    row2 = q.execute(f"SELECT id FROM info_deposit where id = '{userid}'").fetchone()
    if row is None:
        now = datetime.now()
        now_date = str(str(now)[:10])
        q.execute("INSERT INTO ugc_users (id,usr_name,data_reg) VALUES ('%s', '%s', '%s')"%(userid,username,now_date))
        connect.commit()
    
    if row1 is None:
        balances = 0
        referals = 0
        ref_links = ref_link.format(config.bot_name, message.chat.id)
        q.execute("INSERT INTO profile_info (id, balance, count_referal, ref_link) VALUES ('%s', '%s','%s', '%s')"%(userid, balances, referals, ref_links))
        if message.text[7:16] != '' and message.text[16:] == "":
            if message.text[7:16] != message.chat.id:
                q.execute("update profile_info set ref = " + str(message.text[7:16])+ " where id = " + str(message.chat.id))
                q.execute("update profile_info set count_referal = count_referal + 1 where id = " + str(message.text[7:16]))
                bot.send_message(message.text[7:16], f'–ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>', parse_mode='HTML')

        if message.text[7:] != '' and message.text[16:] != "":
            if message.text[17:] != message.chat.first_name:
                q.execute("update profile_info set refs = " + str(message.text[7:16])+ " where id = " + str(message.chat.id))
                q.execute("update info_partner set cnt_ref = cnt_ref + 1 where id = " + str(message.text[7:16]))
                bot.send_message(message.text[7:16], f'–ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª –ø–æ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ! <a href="tg://user?id={message.chat.id}">{message.chat.first_name}</a>', parse_mode='HTML')
        connect.commit()
    if row2 is None:
        trading = 0
        maining = 0
        q.execute("INSERT INTO info_deposit (id, deposit_to_maining, deposit_to_traiding) VALUES ('%s', '%s', '%s')"%(userid, maining, trading))
        connect.commit()

    bot.send_message(message.chat.id, f"–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å <a href='https://telegra.ph/Usloviya-soglasheniya-i-pravila-ispolzovaniya-05-19'>—É—Å–ª–æ–≤–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è</a>",disable_web_page_preview=True,parse_mode="html", reply_markup=keyboard.start_confirm)

@bot.callback_query_handler(func=lambda call: True)
def confirm_answer(call):
    
    if call.data == "agrees":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        row = q.execute("SELECT * FROM info_partner where id is " + str(call.message.chat.id)).fetchone()
        if row is None:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üëã",parse_mode="html")
            bot.send_message(call.message.chat.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è <b>LIQ INVEST</b>",parse_mode="HTML", reply_markup=keyboard.main_menu)
        else:
            bot.send_message(call.message.chat.id, "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è <b>LIQ INVEST</b>",parse_mode="HTML", reply_markup=keyboard.partner_menu)
            bot.send_sticker(call.message.chat.id, "CAACAgIAAxkBAAECXdhgtnwoqhoHHSWpFm5tBu2OK_a0sAACywYAAhhC7ghbq3TkbU4hxB8E")


    if call.data == "text":
        msg = bot.send_message(call.message.chat.id, "üì©–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏üì©")
        bot.register_next_step_handler(msg, send_all)

    if call.data == "pics":
        art = bot.send_message(call.message.chat.id, f"üåå–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ —Å –±–æ—Ç–∞ @imgurbot_botüåå")
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        bot.register_next_step_handler(art, captions)
    
    if call.data == "top_up":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—èü§ë", reply_markup=keyboard.payment_button)


    if call.data == "withdrawpart":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + str(call.message.chat.id))
        balik = q.fetchone()[0]
        if int(balik) >= 100:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—ë–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞üì§", reply_markup=keyboard.withdraw_partner)
        else:
            bot.answer_callback_query(call.id, "‚ùå–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ 100—Ä")

    if call.data == "backpart":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT data_reg FROM ugc_users where id is " + str(call.message.chat.id))
        data_register1 = q.fetchone()[0]
        q.execute("SELECT balance FROM profile_info where id is  " + str(call.message.chat.id))
        balancess = q.fetchone()[0]
        q.execute("SELECT cnt_ref FROM info_partner where id is  " + str(call.message.chat.id))
        referalss = q.fetchone()[0]
        q.execute("SELECT partner_link FROM info_partner where id is "+ str(call.message.chat.id))
        ref_links = q.fetchone()[0]
        q.execute("SELECT deposit_to_maining FROM info_deposit where id is "+ str(call.message.chat.id))
        dep_maining = q.fetchone()[0]
        q.execute("SELECT deposit_to_traiding FROM info_deposit where id is "+ str(call.message.chat.id))
        dep_trading1 = q.fetchone()[0]

        q.close()

        bot.send_message(call.message.chat.id,f"üë®‚Äçüíª{call.message.chat.first_name}, —ç—Ç–æ –≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π –∫–∞–±–∏–Ω–µ—Çüë®‚Äçüíª\n\n"\
            f"üè¶–ë–∞–ª–∞–Ω—Å: {balancess}\n\n"\
                f"üíµ–î–µ–ø–æ–∑–∏—Ç –º–∞–π–Ω–∏–Ω–≥: {dep_maining}\n\n"\
                    f"üí∂–î–µ–ø–æ–∑–∏—Ç —Ç—Ä–µ–π–¥–∏–Ω–≥: {dep_trading1}\n\n"\
                        f"üìä–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ —Ç—Ä–µ–π–¥–∏–Ω–≥: 1-15% –≤ –¥–µ–Ω—å\n\n"\
                            f"üìà–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –º–∞–π–Ω–∏–Ω–≥: 5% –≤ –¥–µ–Ω—å\n\n"\
                                f"‚è≥–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {data_register1}\n\n\n"\
                                    f"üôé‚Äç‚ôÇÔ∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {referalss}\n"\
                                        f"üîó–í–∞—à–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞: {ref_links}\n\n"\
                                            "üí∞–£–¥–∞—á–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–∫–∞üí∞",disable_web_page_preview=True,parse_mode="html", reply_markup=keyboard.profile_partner)
        

        
    
    
    if call.data == "back":
        profile_button = types.InlineKeyboardMarkup()
        withdraw = types.InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å –≤—ã–≤–æ–¥", callback_data="withdraw")
        top_up_balnce = types.InlineKeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="top_up")
        partner = types.InlineKeyboardButton("–°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º", callback_data="partner_{}".format(call.message.chat.id))
        profile_button.row(withdraw, top_up_balnce)
        profile_button.row(partner)
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT data_reg FROM ugc_users where id is " + str(call.message.chat.id))
        data_register1 = q.fetchone()[0]
        q.execute("SELECT balance FROM profile_info where id is  " + str(call.message.chat.id))
        balancess = q.fetchone()[0]
        q.execute("SELECT count_referal FROM profile_info where id is  " + str(call.message.chat.id))
        referalss = q.fetchone()[0]
        q.execute("SELECT ref_link FROM profile_info where id is "+ str(call.message.chat.id))
        ref_links = q.fetchone()[0]
        q.execute("SELECT deposit_to_maining FROM info_deposit where id is "+ str(call.message.chat.id))
        dep_maining = q.fetchone()[0]
        q.execute("SELECT deposit_to_traiding FROM info_deposit where id is "+ str(call.message.chat.id))
        dep_trading1 = q.fetchone()[0]

        q.close()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"üë®‚Äçüíª{call.message.chat.first_name}, —ç—Ç–æ –≤–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüë®‚Äçüíª\n\n"\
            f"üè¶–ë–∞–ª–∞–Ω—Å: {balancess}‚ÇΩ\n\n"\
                f"üíµ–î–µ–ø–æ–∑–∏—Ç –º–∞–π–Ω–∏–Ω–≥: {dep_maining}‚ÇΩ\n\n"\
                    f"üí∂–î–µ–ø–æ–∑–∏—Ç —Ç—Ä–µ–π–¥–∏–Ω–≥: {dep_trading1}‚ÇΩ\n\n"\
                        f"üìä–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ —Ç—Ä–µ–π–¥–∏–Ω–≥: 1-15% –≤ –¥–µ–Ω—å\n\n"\
                            f"üìà–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –º–∞–π–Ω–∏–Ω–≥: 5% –≤ –¥–µ–Ω—å\n\n"\
                                f"‚è≥–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {data_register1}\n\n\n"\
                                    f"üôé‚Äç‚ôÇÔ∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {referalss}\n"\
                                        f"üîó–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {ref_links}\n\n"\
                                            "üí∞–£–¥–∞—á–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞üí∞",disable_web_page_preview=True,parse_mode="html", reply_markup=profile_button)
    

    if call.data == "qiwi":
        summ_to_qiwi = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–¢–∏–ø –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è QIWI\n"\
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ä—É–±–ª—è—Ö", reply_markup=keyboard.back_to_payment)
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        bot.register_next_step_handler(summ_to_qiwi, payment_form_to_qiwi)

    if call.data == "card":
        summ_to_card = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–¢–∏–ø –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ö–∞—Ä—Ç–∞\n"\
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ä—É–±–ª—è—Ö", reply_markup=keyboard.back_to_payment)
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        bot.register_next_step_handler(summ_to_card, payment_form_to_card)

    if call.data == "btc":
        summ_to_btc = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–¢–∏–ø –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è BTC\n"\
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ä—É–±–ª—è—Ö", reply_markup=keyboard.back_to_payment)
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        bot.register_next_step_handler(summ_to_btc, payment_form_to_btc)
    
    if call.data == "calc1":
        send = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–¢–∏–ø –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è <b>–ú–∞–π–Ω–∏–Ω–≥</b>\n\n"\
            "<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å:</b>", parse_mode='html')
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        bot.register_next_step_handler(send, count_main)
    
    if call.data == "calc2":
        send = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–¢–∏–ø –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è <b>–¢—Ä–µ–π–¥–∏–Ω–≥</b>\n\n"\
            "<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å:</b>", parse_mode='html')
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        bot.register_next_step_handler(send, count_trade)

    
    if call.data == "main_invest":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + str(call.message.chat.id))
        bal = q.fetchone()[0]
        q.close()
        min_dep = 500
        if bal >= min_dep:
            summ_to_dep_main = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –∏–Ω—Å–≤–µ—Å—Ç–∏—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–æ {bal}‚ÇΩ")
            bot.register_next_step_handler(summ_to_dep_main, main_dep)
        else:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–í–∞—à –±–∞–ª–∞–Ω—Å –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –¥–µ–ø–æ–∑–∏—Ç–∞ {min_dep}‚ÇΩ", reply_markup=keyboard.minimum_babok)

    if call.data == "trade_invest":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + str(call.message.chat.id))
        balik = q.fetchone()[0]
        q.close()
        min_dep1 = 100
        if balik >= min_dep1:
            summ_to_dep_trading = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –∏–Ω—Å–≤–µ—Å—Ç–∏—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–æ {balik}‚ÇΩ")
            bot.register_next_step_handler(summ_to_dep_trading, dep_trading)
        else:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–í–∞—à –±–∞–ª–∞–Ω—Å –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –¥–µ–ø–æ–∑–∏—Ç–∞ {min_dep1}‚ÇΩ", reply_markup=keyboard.minimum_babok)


    if call.data == "withdraw":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + str(call.message.chat.id))
        balik = q.fetchone()[0]
        if int(balik) >= 100:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—ë–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞üì§", reply_markup=keyboard.withdraw_button)
        
        else:
            bot.answer_callback_query(call.id, "‚ùå–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ 100—Ä")
    
    if call.data == "qiwi1":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + str(call.message.chat.id))
        balik = q.fetchone()[0]
        summ_qiwi = bot.send_message(call.message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞, –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –≤—ã–≤–æ–¥ {balik}‚ÇΩ\n"\
            "‚ÄºÔ∏è–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ 100‚ÇΩ‚ÄºÔ∏è")
        bot.register_next_step_handler(summ_qiwi, withdraw_qiwi)

    if call.data == "card1":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + str(call.message.chat.id))
        balik = q.fetchone()[0]
        summ_card = bot.send_message(call.message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞, –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –≤—ã–≤–æ–¥ {balik}‚ÇΩ\n"\
            "‚ÄºÔ∏è–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ 100‚ÇΩ‚ÄºÔ∏è")
        bot.register_next_step_handler(summ_card, withdraw_card)

    if call.data == "btc1":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + str(call.message.chat.id))
        balik = q.fetchone()[0]
        summ_btc = bot.send_message(call.message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞, –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –≤—ã–≤–æ–¥ {balik}‚ÇΩ\n"\
            "‚ÄºÔ∏è–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ 500‚ÇΩ‚ÄºÔ∏è")
        bot.register_next_step_handler(summ_btc, withdraw_btc)
    
    if call.data == "eth":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + str(call.message.chat.id))
        balik = q.fetchone()[0]
        summ_eth = bot.send_message(call.message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞, –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –≤—ã–≤–æ–¥ {balik}‚ÇΩ\n"\
            "‚ÄºÔ∏è–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ 500‚ÇΩ‚ÄºÔ∏è")
        bot.register_next_step_handler(summ_eth, withdraw_eth)
    
    if call.data == "last_trans":
        try:
            connect = sqlite3.connect('bot.db')
            q = connect.cursor()
            res = q.execute("SELECT * FROM trans ORDER BY ID DESC").fetchall()
            cnt = 1
            trans = 'üì§–ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã–≤–æ–¥—ãüì§\n\n'
            for i in res:
                info = f"{cnt}. #{i[1]} {i[3]}‚ÇΩ {i[2]}\n"
                cnt +=1
                trans = trans + str(info) + '\n'
                if cnt > 10:
                    break
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=trans)
        except:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –µ—â—ë –Ω–µ –±—ã–ª–æ –≤—ã–≤–æ–¥–æ–≤")
    if call.data == "accmain":
        send = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ–º –Ω–∞—â–∏—Ç—ã–≤–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ 5%")
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        bot.register_next_step_handler(send, accmain)
    
    if call.data == "acctraid":
        send = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ–º –Ω–∞—â–∏—Ç—ã–≤–∞—Ç—å –æ—Ç 1 –¥–æ 15%")
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        bot.register_next_step_handler(send, acctraid)
    
    if call.data == "stop_spam":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")


    
    if call.data == "cancel1":
        userid = str(call.message.chat.id)
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute(f"DELETE FROM payment_check where id = '{userid}'")
        connect.commit()

        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ü–ª–∞—Ç–µ–∂ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω‚ùå")
    
    if call.data == "reset_payment":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—èü§ë", reply_markup=keyboard.payment_button)

        
        

    arr = call.data.split("_")

    if arr[0] == "done1":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        info = q.execute(f"SELECT * FROM info_vuvod where id = '{arr[1]}'").fetchone()
        chat_id = info[1]
        zakaz = info[0]
        q.execute(f"DELETE FROM info_vuvod where id = '{zakaz}'")
        connect.commit()
        q.close()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ó–∞—è–≤–∫–∞ ‚Ññ{zakaz} –≤—ã–ø–ª–∞—á–µ–Ω–∞")
        bot.send_message(info[1], f"–ó–∞—è–≤–∫–∞ ‚Ññ{zakaz} –Ω–∞ –≤—ã–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")

    arr = call.data.split("_")

    if arr[0] == "add1":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        data = q.execute(f"SELECT * FROM info_btc where id = '{arr[1]}'").fetchone()
        chat_id = data[0]
        summ = data[1]
        user_name = data[2]
        q.execute(f"update profile_info set balance = balance + '{summ}' where id = '{chat_id}'")
        connect.commit()
        ref_info = q.execute(f"SELECT ref FROM profile_info where id = '{arr[1]}'").fetchone()[0]
        part_info = q.execute(f"SELECT refs FROM profile_info where id = '{arr[1]}'").fetchone()[0]
        if ref_info is None and part_info is None:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–ª—å @{user_name} –ø–æ–ª—É—á–∏–ª –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ btc")
            bot.send_message(chat_id, f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {summ}‚ÇΩ")
            q.execute(f"DELETE FROM info_btc where id = '{arr[1]}'")
            connect.commit()
            
        elif part_info is None:
            add_money2 = int(int(summ) * 0.03)
            q.execute(f"update profile_info set balance = balance + '{add_money2}' where id = '{ref_info}'")
            bot.send_message(ref_info, f"–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ {add_money2}‚ÇΩ –æ—Ç –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ @{user_name}")
            q.execute(f"DELETE FROM info_btc where id = '{arr[1]}'")
            connect.commit()
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–ª—å @{user_name} –ø–æ–ª—É—á–∏–ª –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ btc")
            bot.send_message(chat_id, f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–æ –Ω–∞ {summ}‚ÇΩ")
        
        elif ref_info is None:
            add_part = int(int(summ) * 0.15)
            q.execute(f"update profile_info set balance = balance + '{add_part}' where id = '{part_info}'")
            bot.send_message(part_info, f"–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ {add_part}‚ÇΩ –æ—Ç –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ @{user_name} –ø–æ –ø–∞—Ä–Ω—Ç–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ")
            q.execute(f"DELETE FROM info_btc where id = '{arr[1]}'")
            connect.commit()
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–ª—å @{user_name} –ø–æ–ª—É—á–∏–ª –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ btc")
            bot.send_message(chat_id, f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–æ –Ω–∞ {summ}‚ÇΩ")
            
       
    
    arr = call.data.split("_")
 
    if arr[0] == "cancel":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        data = q.execute(f"SELECT * FROM info_btc where id = '{arr[1]}'").fetchone()
        q.execute(f"DELETE FROM info_btc where id = '{arr[1]}'")
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        bot.send_message(data[0], "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞—è–≤–∫–∏ –∏—Å—Ç–µ–∫, –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")

    if arr[0] == "partner":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        row = q.execute("SELECT * FROM info_partner where id is " + str(arr[1])).fetchone()
        if row is None:
            username = str(call.message.chat.username)
            send = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–∞—à–µ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞")
            bot.clear_step_handler_by_chat_id(call.message.chat.id)
            bot.register_next_step_handler(send, register_partner)
        else:
            bot.send_message(arr[1], "–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å –Ω–∞—à–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º", reply_markup=keyboard.partner_menu)
    
    if arr[0] == "reqconf":
        chat_id = arr[1]
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        row = q.execute("SELECT * FROM info_partner WHERE id IS " + str(chat_id)).fetchone()
        if row is None:
            cnt = 0
            ref_partner = part_ref.format(config.bot_name, arr[1], arr[2])
            q.execute("INSERT INTO info_partner (id, cnt_ref, partner_link) VALUES ('%s', '%s', '%s')"%(chat_id, cnt, ref_partner))
            connect.commit()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ó–∞—è–≤–∫–∞ –¥–ª—è {arr[2]} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")
        bot.send_message(arr[1], "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞", reply_markup=keyboard.partner_menu)
    if arr[0] == "qeccenc":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"–ó–∞—è–≤–∫–∞ –¥–ª—è {arr[2]} –æ—Ç–º–µ–Ω–µ–Ω–∞")
        bot.send_message(arr[1], "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ –æ—Ç–º–µ–Ω–µ–Ω–∞")
    
    if arr[0] == "check":
        summ = arr[1]
        userid = call.message.chat.id
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        key = q.execute("SELECT * FROM qiwi_key").fetchone()[0]
        p2p = QiwiP2P(auth_key=key)
        info = q.execute(f"SELECT bill FROM payment_check where id = '{userid}'").fetchone()[0]
        stat = p2p.check(bill_id=info).status
        if stat == "PAID":
            q.execute(f"DELETE FROM payment_check where id = '{userid}'")
            q.execute(f"update profile_info set balance = balance + '{summ}' where id = '{userid}'")
            connect.commit()
            ref_info = q.execute(f"SELECT ref FROM profile_info where id = '{userid}'").fetchone()[0]
            part_info = q.execute(f"SELECT refs FrOM profile_info where id = '{userid}'").fetchone()[0]
            if ref_info is None and part_info is None:
                bot.send_message(call.message.chat.id, f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–æ –Ω–∞ {summ}‚ÇΩ")

            elif part_info is None:
                add_money1 = int(int(summ) * 0.03)
                q.execute(f"update profile_info set balance = balance + '{add_money1}' where id = '{ref_info}'")
                connect.commit()
                bot.send_message(ref_info, f"–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ {add_money1}‚ÇΩ –æ—Ç –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞")
                q.close()
                bot.send_message(call.message.chat.id, f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–æ –Ω–∞ {summ}‚ÇΩ")
            
            elif ref_info is None:
                add_part1 = int(int(summ) * 0.15)
                q.execute(f"update profile_info set balance = balance + '{add_part1}' where id = '{part_info}'")
                connect.commit()
                bot.send_message(part_info, f"–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ {add_part1}‚ÇΩ –æ—Ç –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –ø–æ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ")
                q.close()
                bot.send_message(call.message.chat.id, f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–æ –Ω–∞ {summ}‚ÇΩ")
        else:
            bot.send_message(userid,"–û–ø–ª–∞—Ç–∞ –µ—â—ë –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥")
            time.sleep(2)

    



@bot.message_handler(content_types=['text'])
def answer(message):
    
    if message.text == "üë®‚ÄçüíªSupportüë®‚Äçüíª":
        bot.send_message(message.chat.id, f"–•–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∂–µ —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–æ–±–ª–µ–º–æ–π?\n"\
            f"–¢–æ–≥–¥–∞ –ø–∏—à–∏—Ç–µ –º–Ω–µ {config.support}\n"\
                f"<a href = '{config.channel}'>–ù–∞—à –∫–∞–Ω–∞–ª</a>\n"\
                    f"<a href = '{config.chat}'>–ù–∞—à —á–∞—Ç</a>\n"\
                        f"<a href = '{config.otzyvy}'>–û—Ç–∑—ã–≤—ã</a>\n",disable_web_page_preview=True,parse_mode="html")

    if message.text == "/admin":
        if message.chat.id == config.admin1 or message.chat.id == config.admin2:
            bot.send_message(message.chat.id, "ü§°", parse_mode='HTML')
            connect = sqlite3.connect('bot.db')
            q = connect.cursor()
            row = q.execute("SELECT * FROM info_partner where id is " + str(message.chat.id)).fetchone()
            q.close()
            if row is None:
                bot.send_message(message.chat.id,'<b>–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!</b>', parse_mode='HTML', reply_markup=keyboard.main_menu_admin)
            else:
                bot.send_message(message.chat.id,'<b>–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!</b>', parse_mode='HTML', reply_markup=keyboard.main_menu_admin2)
            

        else:
            connect = sqlite3.connect('bot.db')
            q = connect.cursor()
            row = q.execute("SELECT * FROM info_partner where id is " + str(message.chat.id)).fetchone()
            q.close()
            if row is None:
                bot.send_message(message.chat.id,"<b>üôÖ–î–ª—è –≤–∞—Å —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞üôÖ</b>", parse_mode='HTML', reply_markup=keyboard.main_menu)
            else:
                bot.send_message(message.chat.id,"<b>üôÖ–î–ª—è –≤–∞—Å —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞üôÖ</b>", parse_mode='HTML', reply_markup=keyboard.partner_menu)

    
    if message.text == "üîà–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—Éüîà":
        bot.send_message(message.chat.id,"<b>–ö–∞–∫ –±—É–¥–µ–º —Ä–∞—Å—Å—ã–ª–∞—Ç—å?</b>", parse_mode="HTML",reply_markup=keyboard.spam)
    
    if message.text == "üîß–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å p2p –∫–ª—é—áüîß":
        send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –∫–∏–≤–∏ –¥–ª—è p2p")
        bot.clear_step_handler_by_chat_id(message.chat.id)
        bot.register_next_step_handler(send, reset_key)
        
    if message.text == "üè¶–û–±—â–∏–π –±–∞–Ω–∫üè¶":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        all_bank_trade = q.execute(f'SELECT SUM(deposit_to_traiding) FROM info_deposit').fetchone()[0]
        all_bank_main = q.execute(f'SELECT SUM(deposit_to_maining) FROM info_deposit').fetchone()[0]
        all_bank = int(all_bank_trade) + int(all_bank_main)
        bot.send_message(message.chat.id, f"–û–±—â–∞—è —Å—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: {all_bank} —Ä—É–±.")
        q.close()

    if message.text == "üíº–ö–∞–±–∏–Ω–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞üíº":
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT data_reg FROM ugc_users where id is " + str(message.chat.id))
        data_register1 = q.fetchone()[0]
        q.execute("SELECT balance FROM profile_info where id is  " + str(message.chat.id))
        balancess = q.fetchone()[0]
        q.execute("SELECT cnt_ref FROM info_partner where id is  " + str(message.chat.id))
        referalss = q.fetchone()[0]
        q.execute("SELECT partner_link FROM info_partner where id is "+ str(message.chat.id))
        ref_links = q.fetchone()[0]
        q.execute("SELECT deposit_to_maining FROM info_deposit where id is "+ str(message.chat.id))
        dep_maining = q.fetchone()[0]
        q.execute("SELECT deposit_to_traiding FROM info_deposit where id is "+ str(message.chat.id))
        dep_trading1 = q.fetchone()[0]
        q.close()

        bot.send_message(message.chat.id,f"üë®‚Äçüíª{message.chat.first_name}, —ç—Ç–æ –≤–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π –∫–∞–±–∏–Ω–µ—Çüë®‚Äçüíª\n\n"\
            f"üè¶–ë–∞–ª–∞–Ω—Å: {balancess}‚ÇΩ\n\n"\
                f"üíµ–î–µ–ø–æ–∑–∏—Ç –º–∞–π–Ω–∏–Ω–≥: {dep_maining}‚ÇΩ\n\n"\
                    f"üí∂–î–µ–ø–æ–∑–∏—Ç —Ç—Ä–µ–π–¥–∏–Ω–≥: {dep_trading1}‚ÇΩ\n\n"\
                        f"üìä–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ —Ç—Ä–µ–π–¥–∏–Ω–≥: 1-15% –≤ –¥–µ–Ω—å\n\n"\
                            f"üìà–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –º–∞–π–Ω–∏–Ω–≥: 5% –≤ –¥–µ–Ω—å\n\n"\
                                f"‚è≥–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {data_register1}\n\n\n"\
                                    f"üôé‚Äç‚ôÇÔ∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {referalss}\n"\
                                        f"üîó–í–∞—à–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞: {ref_links}\n\n"\
                                            "üí∞–£–¥–∞—á–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞üí∞",disable_web_page_preview=True,parse_mode="html", reply_markup=keyboard.profile_partner)

    if message.text == "üñ•–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüñ•":
        profile_button = types.InlineKeyboardMarkup()
        withdraw = types.InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å –≤—ã–≤–æ–¥", callback_data="withdraw")
        top_up_balnce = types.InlineKeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="top_up")
        partner = types.InlineKeyboardButton("–°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º", callback_data="partner_{}".format(message.chat.id))
        profile_button.row(withdraw, top_up_balnce)
        profile_button.row(partner)

        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT data_reg FROM ugc_users where id is " + str(message.chat.id))
        data_register1 = q.fetchone()[0]
        q.execute("SELECT balance FROM profile_info where id is  " + str(message.chat.id))
        balancess = q.fetchone()[0]
        q.execute("SELECT count_referal FROM profile_info where id is  " + str(message.chat.id))
        referalss = q.fetchone()[0]
        q.execute("SELECT ref_link FROM profile_info where id is "+ str(message.chat.id))
        ref_links = q.fetchone()[0]
        q.execute("SELECT deposit_to_maining FROM info_deposit where id is "+ str(message.chat.id))
        dep_maining = q.fetchone()[0]
        q.execute("SELECT deposit_to_traiding FROM info_deposit where id is "+ str(message.chat.id))
        dep_trading1 = q.fetchone()[0]

        q.close()

        bot.send_message(message.chat.id,f"üë®‚Äçüíª{message.chat.first_name}, —ç—Ç–æ –≤–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüë®‚Äçüíª\n\n"\
            f"üè¶–ë–∞–ª–∞–Ω—Å: {balancess}‚ÇΩ\n\n"\
                f"üíµ–î–µ–ø–æ–∑–∏—Ç –º–∞–π–Ω–∏–Ω–≥: {dep_maining}‚ÇΩ\n\n"\
                    f"üí∂–î–µ–ø–æ–∑–∏—Ç —Ç—Ä–µ–π–¥–∏–Ω–≥: {dep_trading1}‚ÇΩ\n\n"\
                        f"üìä–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ —Ç—Ä–µ–π–¥–∏–Ω–≥: 1-15% –≤ –¥–µ–Ω—å\n\n"\
                            f"üìà–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –º–∞–π–Ω–∏–Ω–≥: 5% –≤ –¥–µ–Ω—å\n\n"\
                                f"‚è≥–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {data_register1}\n\n\n"\
                                    f"üôé‚Äç‚ôÇÔ∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –í–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {referalss}\n"\
                                        f"üîó–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {ref_links}\n\n"\
                                            "üí∞–£–¥–∞—á–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞üí∞",disable_web_page_preview=True,parse_mode="html", reply_markup=profile_button)
    
    if message.text == "üí∏–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—åüí∏":
        bot.send_message(message.chat.id,"üìà–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–πüìà", reply_markup=keyboard.invest_button)
    
    if message.text == "‚öôÔ∏è–°–¥–µ–ª–∞—Ç—å backup‚öôÔ∏è":
        try:
            file_bd = open("bot.db", "rb")
            bot.send_document(config.vuvod, file_bd)
            file_bd.close()
            bot.send_message(message.chat.id, "backup –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω ‚úÖ")
        except Exception as e:
            bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å backup!!!\n"\
            f"{e}")
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞")

    
    if message.text == "üì†–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Äüì†":
        send = bot.send_message(message.chat.id, "–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤–∞—à—É –ø—Ä–∏–±—ã–ª—å –æ—Ç —Å—É–º–º—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏.\n\n<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏:</b>", parse_mode="html", reply_markup=keyboard.calculate)
    

    if message.text == "‚öôÔ∏è–ú–∞–π–Ω–∏–Ω–≥‚öôÔ∏è":
        bot.send_message(message.chat.id, text.mining_text, reply_markup=keyboard.maining_button)

    if message.text == "üìä–¢—Ä–µ–π–¥–∏–Ω–≥üìä":
        bot.send_message(message.chat.id, text.trading_text, reply_markup=keyboard.traid_button)

    if message.text == "üîô–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô":
        bot.send_message(message.chat.id, "üéá", reply_markup=keyboard.main_menu)

    if message.text == "üí≤–°–¥–µ–ª–∞—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏—èüí≤":
        bot.send_message(message.chat.id,"<b>–ö—É–¥–∞ –Ω–∞—á–∏—Å–ª—è–µ–º?</b>", parse_mode='html', reply_markup=keyboard.accruals)
    
    if message.text == "‚ÑπÔ∏è–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞‚ÑπÔ∏è":
        key = types.InlineKeyboardMarkup()
        key.row(types.InlineKeyboardButton("–£—Å–ª–æ–≤–∏—è", url="https://telegra.ph/Usloviya-soglasheniya-i-pravila-ispolzovaniya-05-19"), types.InlineKeyboardButton("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã–≤–æ–¥—ã", callback_data="last_trans"))
        req = requests.get("https://yobit.net/api/3/ticker/btc_usd")
        response = req.json()
        sell_price = response["btc_usd"]["sell"]
        btc_price = int(sell_price)

        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        all_user_count = q.execute(f'SELECT COUNT(id) FROM ugc_users').fetchone()[0]
        online = random.randint(0, all_user_count)
        bot.send_message(message.chat.id,"<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>\n\n"\
            "<i>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ  –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –æ —Ç–µ–∫—É—â–µ–º –∫—É—Ä—Å–µ Bitcoin, –∫–æ—Ç–æ—Ä—ã–π –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è  —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π —Å—Ç–∞–≤–∫–∏</i>\n\n"\
                f"üìà –ö—É—Ä—Å BitCoin (Yobit): {btc_price} $\n\n"\
                    f"‚ñ™Ô∏è –í—Å–µ–≥–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤: {all_user_count }\n"\
                        f"‚ñ™Ô∏è –û–Ω–ª–∞–π–Ω: {online}", parse_mode='html', reply_markup=key)




def send_all(message):
    try:
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT id FROM ugc_users")
        results = q.fetchall()
        q.close()
        bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥</b>", parse_mode='html')
        time.sleep(10)
        bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ—à–ª–∞...</b>", parse_mode='html')
        k = 0
        for result in results:
            try:
                bot.send_message(result[0], message.text, parse_mode='html')
            except:
                pass
            time.sleep(0.3)
            k +=1
        bot.send_message(message.chat.id, f"–†–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∏–ª–æ {str(k)} —á–µ–ª–æ–≤–µ–∫")
    except Exception as e:
        bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞ –†–ê–°–°–´–õ–ö–ê –¢–ï–ö–°–¢–ê!!!\n"\
            f"{e}")
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏!")

        

        


def captions(message):
    photo = message.text
    text = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ–¥ —Ñ–æ—Ç–æ")
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(text, send_photo, photo)

def send_photo(message, photo):
    try:
        text = message.text
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT id FROM ugc_users")
        results = q.fetchall()
        q.close()
        bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥</b>", parse_mode='html')
        time.sleep(10)
        bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ—à–ª–∞...</b>", parse_mode='html')
        k = 0
        for result in results:
            try:
                bot.send_photo(result[0], photo, caption=f"{text}", parse_mode='html')
            except:
                pass
            time.sleep(0.3)
            k += 1
        bot.send_message(message.chat.id, f"–†–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∏–ª–æ {str(k)} —á–µ–ª–æ–≤–µ–∫")
    except Exception as e:
        bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞ –†–ê–°–°–´–õ–ö–ê –§–û–¢–û!!!\n"\
            f"{e}")
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏!")

def payment_form_to_qiwi(message):
    if message.text.isdigit():
        if int(message.text) <= 50000:
            try:
                connect = sqlite3.connect('bot.db')
                q = connect.cursor()
                key = q.execute("SELECT * FROM qiwi_key").fetchone()[0]
                p2p = QiwiP2P(auth_key=key)
                userid = message.chat.id
                summ = int(message.text)
                new_bill = p2p.bill(amount=summ, lifetime=15)
                info = new_bill.bill_id
                url_qiwi = new_bill.pay_url
                row = q.execute("SELECT * FROM payment_check where id is " + str(userid)).fetchone()
                if row is None:
                    q.execute("INSERT INTO payment_check (id, bill) VALUES ('%s', '%s')"%(userid, info))
                    connect.commit()
                
                else:
                    q.execute(f"DELETE FROM payment_check where id = '{userid}'")
                    connect.commit()
                    q.execute("INSERT INTO payment_check (id, bill) VALUES ('%s', '%s')"%(userid, info))
                    connect.commit()


                #############################################################################################################
                btn = types.InlineKeyboardMarkup()
                btn2 = types.InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂‚öôÔ∏è", callback_data='check_{}'.format(summ))
                btn3 = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –ø–ª–∞—Ç–µ–∂‚ùå", callback_data='cancel1')
                btn.row(btn2, btn3)
                #############################################################################################################


                bot.send_message(message.chat.id,"<b>–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 15 –º–∏–Ω—É—Ç</b>\n"\
                    f'<a href="{url_qiwi}">–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –±—ã—Å—Ç—Ä–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞</a>', parse_mode='html', reply_markup=btn)
            except Exception as e:
                bot.send_message(config.error_chat, "!!!–û–®–ò–ë–ö–ê –ü–û–ü–û–õ–ù–ï–ù–ò–Ø –ö–ò–í–ò!!!\n"\
                    f"{e}")
                bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
        else:
            bot.send_message(message.chat.id, "‚õîÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–¥–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ 50 000‚ÇΩ")
        

    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–æ")



    

def payment_form_to_card(message):
    if message.text.isdigit():
        if int(message.text) <= 50000:
            try:
                connect = sqlite3.connect('bot.db')
                q = connect.cursor()
                key = q.execute("SELECT * FROM qiwi_key").fetchone()[0]
                p2p = QiwiP2P(auth_key=key)
                summ_card = int(message.text)
                userid = message.chat.id
                new_bill = p2p.bill(amount=summ_card, lifetime=15)
                info = new_bill.bill_id
                url_card = new_bill.pay_url
                row = q.execute("SELECT * FROM payment_check where id is " + str(userid)).fetchone()
                if row is None:
                    q.execute("INSERT INTO payment_check (id, bill) VALUES ('%s', '%s')"%(userid, info))
                    connect.commit()
                else:
                    q.execute(f"DELETE FROM payment_check where id = '{userid}'")
                    connect.commit()
                    q.execute("INSERT INTO payment_check (id, bill) VALUES ('%s', '%s')"%(userid, info))
                    connect.commit()

                #############################################################################################################
                btn = types.InlineKeyboardMarkup()
                btn2 = types.InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂‚öôÔ∏è", callback_data='check_{}'.format(summ_card))
                btn3 = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –ø–ª–∞—Ç–µ–∂‚ùå", callback_data='cancel1')
                btn.row(btn2, btn3)
                #############################################################################################################


                bot.send_message(message.chat.id, "<b>–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 15 –º–∏–Ω—É—Ç</b>\n"\
                    f'<a href="{url_card}">–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –±—ã—Å—Ç—Ä–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞</a>', parse_mode='html', reply_markup=btn)
            except Exception as e:
                bot.send_message(config.error_chat, "!!!–û–®–ò–ë–ö–ê –ü–û–ü–û–õ–ù–ï–ù–ò–Ø –ö–ê–†–¢–´!!!\n"\
                    f"{e}")
                
                bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
        else:
            bot.send_message(message.chat.id, "‚õîÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–¥–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ 50 000‚ÇΩ")


        
        
    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–æ")



def  payment_form_to_btc(message):
    if message.text.isdigit():
        if 500 <= int(message.text) <= 100000:
            try:
                connect = sqlite3.connect('bot.db')
                q = connect.cursor()
                userid = str(message.chat.id)
                user_name = message.chat.username
                summ_rub = int(message.text)
                req = requests.get("https://yobit.net/api/3/ticker/btc_usd")
                response = req.json()
                sell_price = int(response["btc_usd"]["sell"])
                sell_price_rub = sell_price * config.dollar_rate
                sum_btc = summ_rub / sell_price_rub
                sum_btc = float('{:.8f}'.format(sum_btc))
                
                key_add = types.InlineKeyboardMarkup()
                key1 = types.InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="add1_{}".format(message.chat.id))
                key2 = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_{}".format(message.chat.id))
                key_add.row(key1,key2)
                q.execute("INSERT INTO info_btc (id, summ, user) VALUES ('%s', '%s', '%s')"%(userid, summ_rub, user_name))
                connect.commit()
                
                bot.send_message(message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ\n"\
                    f"üîÑ–ö—É—Ä—Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {sell_price_rub} —Ä—É–±\n"\
                        f"üîÑBTC –∞–¥—Ä–µ—Å: {config.btc_adress}\n\n"\
                            f"–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å {sum_btc} btc.\n–ü–æ—Å–ª–µ 1 –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –¥–µ–Ω—å–≥–∏ –ø–æ—Å—Ç—É–ø—è—Ç –≤–∞–º –Ω–∞ –±–∞–ª–∞–Ω—Å")
                
                bot.send_message(config.vuvod, "–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è btc\n"\
                    f"username @{user_name}\n"\
                        f"–°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö {summ_rub}\n"\
                            f"–°—É–º–º–∞ –≤ btc {sum_btc}", reply_markup=key_add)
            except Exception as e:
                bot.send_message(config.error_chat, "!!!–û–®–ò–ë–ö–ê –ü–û–ü–û–õ–ù–ï–ù–ò–Ø BTC!!!\n"\
                    f"{e}")
                bot.send_message(message.chat.id,"–û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
        else:
            bot.send_message(message.chat.id, "‚õîÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–¥–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ 100 000‚ÇΩ\n"\
                "‚õîÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–¥–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ 500‚ÇΩ")


    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–æ")
        



def main_dep(message):
    if message.text.isdigit():
        try:
            userid = str(message.chat.id)
            maining_dep = int(message.text)
            min_dep = 500
            if maining_dep >= min_dep:
                connect = sqlite3.connect('bot.db')
                q = connect.cursor()
                q.execute(f"update info_deposit set deposit_to_maining = deposit_to_maining + '{maining_dep}' where id = '{userid}'")
                q.execute(f"update profile_info set balance = balance - '{maining_dep}' where id = {userid}")
                connect.commit()
                row = q.execute("SELECT * FROM info_partner where id is " + str(message.chat.id)).fetchone()
                q.close()
                if row is None:
                    bot.send_message(message.chat.id, f"–ë—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ {maining_dep}‚ÇΩ –≤ –º–∞–π–Ω–∏–Ω–≥", reply_markup=keyboard.main_menu)
                else:
                    bot.send_message(message.chat.id, f"–ë—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ {maining_dep}‚ÇΩ –≤ –º–∞–π–Ω–∏–Ω–≥", reply_markup=keyboard.partner_menu)
            else:
                new_dep = bot.send_message(message.chat.id, f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–∞ {min_dep}")
                bot.clear_step_handler_by_chat_id(message.chat.id)
                bot.register_next_step_handler(new_dep, main_dep)
        except Exception as e:
            bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
                f"{e}")
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")


def dep_trading(message):
    if message.text.isdigit():
        try:
            userid = str(message.chat.id)
            trading_dep = int(message.text)
            min_dep1 = 100
            if trading_dep >= min_dep1:
                connect = sqlite3.connect('bot.db')
                q = connect.cursor()
                q.execute(f"update info_deposit set deposit_to_traiding = deposit_to_traiding + '{trading_dep}' where id = '{userid}'")
                q.execute(f"update profile_info set balance = balance - '{trading_dep}' where id = '{userid}'")
                connect.commit()
                row = q.execute("SELECT * FROM info_partner where id is " + str(message.chat.id)).fetchone()
                q.close()
                if row is None:
                    bot.send_message(message.chat.id, f"–ë—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ {trading_dep}‚ÇΩ –≤ —Ç—Ä–µ–π–¥–∏–Ω–≥", reply_markup=keyboard.main_menu)
                else:
                    bot.send_message(message.chat.id, f"–ë—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ {trading_dep}‚ÇΩ –≤ —Ç—Ä–µ–π–¥–∏–Ω–≥", reply_markup=keyboard.partner_menu)
                    
            
            else:
                new_dep1 = bot.send_message(message.chat.id, f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–∞ {min_dep1}")
                bot.clear_step_handler_by_chat_id(message.chat.id)
                bot.register_next_step_handler(new_dep1, dep_trading)
        except Exception as e:
            bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
                f"{e}")
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
    
    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")



def withdraw_qiwi(message):
    if message.text.isdigit():
        userid = str(message.chat.id)
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + userid)
        balik = q.fetchone()[0]
        q.close()
        sum = int(message.text)
        if sum >= 100 and sum <= int(balik):
            send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã QIWI –∫–æ—à–µ–ª—å–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79062541562")
            bot.clear_step_handler_by_chat_id(message.chat.id)
            bot.register_next_step_handler(send, output_num, sum)
        else:
            new_send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞")
            bot.clear_step_handler_by_chat_id(message.chat.id)
            bot.register_next_step_handler(new_send, withdraw_qiwi)
    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–≤–æ–¥–∞. –ó–∞–∫—Ä—ã–≤–∞—é –≤—ã–≤–æ–¥")



def withdraw_card(message):
    if message.text.isdigit():
        userid = str(message.chat.id)
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + userid)
        balik = q.fetchone()[0]
        q.close()
        sum1 = int(message.text)
        if sum1 >= 100 and sum1 <= int(balik):
            send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –∫–∞—Ä—Ç—ã")
            bot.clear_step_handler_by_chat_id(message.chat.id)
            bot.register_next_step_handler(send, output_num1, sum1)
        else:
            new_send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞")
            bot.clear_step_handler_by_chat_id(message.chat.id)
            bot.register_next_step_handler(new_send, withdraw_card)
    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–≤–æ–¥–∞. –ó–∞–∫—Ä—ã–≤–∞—é –≤—ã–≤–æ–¥")

def withdraw_btc(message):
    if message.text.isdigit():
        userid = str(message.chat.id)
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + userid)
        balik = q.fetchone()[0]
        q.close()
        sum2 = int(message.text)
        if sum2 >= 500 and sum2 <= int(balik):
            send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —Å–≤–æ–µ–≥–æ btc –∫–æ—à–µ–ª—å–∫–∞")
            bot.clear_step_handler_by_chat_id(message.chat.id)
            bot.register_next_step_handler(send, output_num2, sum2)
        else:
            new_send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞")
            bot.clear_step_handler_by_chat_id(message.chat.id)
            bot.register_next_step_handler(new_send, withdraw_btc)
    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–≤–æ–¥–∞. –ó–∞–∫—Ä—ã–≤–∞—é –≤—ã–≤–æ–¥")


def withdraw_eth(message):
    if message.text.isdigit():
        userid = str(message.chat.id)
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        q.execute("SELECT balance FROM profile_info where id is " + userid)
        balik = q.fetchone()[0]
        q.close()
        sum3 = int(message.text)
        if sum3 >= 500 and sum3 <= int(balik):
            send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —Å–≤–æ–µ–≥–æ eth –∫–æ—à–µ–ª—å–∫–∞")
            bot.clear_step_handler_by_chat_id(message.chat.id)
            bot.register_next_step_handler(send, output_num3, sum3)
        else:
            new_send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞")
            bot.clear_step_handler_by_chat_id(message.chat.id)
            bot.register_next_step_handler(new_send, withdraw_eth)
    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–≤–æ–¥–∞. –ó–∞–∫—Ä—ã–≤–∞—é –≤—ã–≤–æ–¥")


def output_num(message, sum):
    try:
        userid = str(message.chat.id)
        user_name = message.chat.username
        name = message.chat.first_name
        now = datetime.now()
        now_date = str(str(now)[:16])
        num = message.text
        zayavka = random.randint(1,10000000)
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        row = q.execute('SELECT * FROM info_vuvod WHERE chat_id IS ' + str(userid)).fetchone()
        q.execute("INSERT INTO info_vuvod (id, chat_id, summ, requisites) VALUES ('%s', '%s', '%s', '%s')"%(zayavka, userid, sum, num))    
        q.execute("INSERT INTO trans (zayavka, data1, summ) VALUES ('%s', '%s', '%s')"%(zayavka, now_date, sum))
        connect.commit()
        usr = bot.get_chat_member(message.chat.id, message.from_user.id)

        q.execute("SELECT balance FROM profile_info where id is " + userid)
        balik = q.fetchone()[0]
        q.execute(f"update profile_info set balance = balance - '{sum}' where id = '{userid}'")
        connect.commit()
        key = types.InlineKeyboardMarkup(row_width=2)
        done = types.InlineKeyboardButton("–í—ã–ø–ª–∞—á–µ–Ω–æ", callback_data="done1_{}".format(zayavka))
        key.row(done)

        if not usr.user.username:
            bot.send_message(config.vuvod, f"–í—ã–≤–æ–¥ –æ—Ç: {name}\n"\
                f"–ß–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {userid}\n"\
                    f"–°—É–º–º–∞ –Ω–∞ –≤—ã–≤–æ–¥: {sum}\n"\
                        f"–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–∏–≤–∏: {num}", reply_markup=key)
            bot.send_message(message.chat.id, f"–ó–∞—è–≤–∫–∞ ‚Ññ{zayavka} –Ω–∞ –≤—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ \n"\
                f"–°—É–º–º–∞: {sum}\n"\
                    f"–†–µ–∫–≤–∏–∑–∏—Ç—ã: {num}\n")

        else:
            bot.send_message(config.vuvod, f"–í—ã–≤–æ–¥ –æ—Ç: @{user_name}\n"\
                f"–ß–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {userid}\n"\
                    f"–°—É–º–º–∞ –Ω–∞ –≤—ã–≤–æ–¥: {sum}\n"\
                        f"–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–∏–≤–∏: {num}", reply_markup=key)
            bot.send_message(message.chat.id, f"–ó–∞—è–≤–∫–∞ ‚Ññ{zayavka} –Ω–∞ –≤—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ \n"\
                f"–°—É–º–º–∞: {sum}\n"\
                    f"–†–µ–∫–≤–∏–∑–∏—Ç—ã: {num}\n")
    
    except Exception as e:
        bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
            f"{e}")
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")


def output_num1(message, sum1):
    try:
        userid = str(message.chat.id)
        user_name = message.chat.username
        name = message.chat.first_name
        num = message.text
        now = datetime.now()
        now_date = str(str(now)[:16])
        zayavka = random.randint(1,10000000)
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        row = q.execute('SELECT * FROM info_vuvod WHERE chat_id IS ' + str(userid)).fetchone()
        q.execute("INSERT INTO info_vuvod (id, chat_id, summ, requisites) VALUES ('%s', '%s', '%s', '%s')"%(zayavka, userid, sum1, num))        
        q.execute("INSERT INTO trans (zayavka, data1, summ) VALUES ('%s', '%s', '%s')"%(zayavka, now_date, sum1))
        connect.commit()
        usr = bot.get_chat_member(message.chat.id, message.from_user.id)

        q.execute("SELECT balance FROM profile_info where id is " + userid)
        balik = q.fetchone()[0]
        q.execute(f"update profile_info set balance = balance - '{sum1}' where id = '{userid}'")
        connect.commit()
        key = types.InlineKeyboardMarkup(row_width=2)
        done = types.InlineKeyboardButton("–í—ã–ø–ª–∞—á–µ–Ω–æ", callback_data="done1_{}".format(zayavka))
        key.row(done)

        if not usr.user.username:
            bot.send_message(config.vuvod, f"–í—ã–≤–æ–¥ –æ—Ç: {name}\n"\
                f"–ß–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {userid}\n"\
                    f"–°—É–º–º–∞ –Ω–∞ –≤—ã–≤–æ–¥: {sum1}\n"\
                        f"–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–∞—Ä—Ç—ã: {num}", reply_markup=key)
            
            bot.send_message(message.chat.id, f"–ó–∞—è–≤–∫–∞ ‚Ññ{zayavka} –Ω–∞ –≤—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ \n"\
                f"–°—É–º–º–∞: {sum1}\n"\
                    f"–†–µ–∫–≤–∏–∑–∏—Ç—ã: {num}\n")

        else:
            bot.send_message(config.vuvod, f"–í—ã–≤–æ–¥ –æ—Ç: @{user_name}\n"\
                f"–ß–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {userid}\n"\
                    f"–°—É–º–º–∞ –Ω–∞ –≤—ã–≤–æ–¥: {sum1}\n"\
                        f"–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–∞—Ä—Ç—ã: {num}", reply_markup=key)
            bot.send_message(message.chat.id, f"–ó–∞—è–≤–∫–∞ ‚Ññ{zayavka} –Ω–∞ –≤—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ \n"\
                f"–°—É–º–º–∞: {sum1}\n"\
                    f"–†–µ–∫–≤–∏–∑–∏—Ç—ã: {num}\n")
    
    except Exception as e:
        bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
            f"{e}")
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")



def output_num2(message, sum2):
    try:
        userid = str(message.chat.id)
        user_name = message.chat.username
        name = message.chat.first_name
        num = message.text
        now = datetime.now()
        now_date = str(str(now)[:16])
        zayavka = random.randint(1,10000000)
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        row = q.execute('SELECT * FROM info_vuvod WHERE chat_id IS ' + str(userid)).fetchone()
        q.execute("INSERT INTO info_vuvod (id, chat_id, summ, requisites) VALUES ('%s', '%s', '%s', '%s')"%(zayavka, userid, sum2, num))
        q.execute("INSERT INTO trans (zayavka, data1, summ) VALUES ('%s', '%s', '%s')"%(zayavka, now_date, sum2))
        connect.commit()
        usr = bot.get_chat_member(message.chat.id, message.from_user.id)
            

        q.execute("SELECT balance FROM profile_info where id is " + userid)
        balik = q.fetchone()[0]
        q.execute(f"update profile_info set balance = balance - '{sum2}' where id = '{userid}'")
        connect.commit()
        key = types.InlineKeyboardMarkup(row_width=2)
        done = types.InlineKeyboardButton("–í—ã–ø–ª–∞—á–µ–Ω–æ", callback_data="done1_{}".format(zayavka))
        key.row(done)

        if not usr.user.username:
            bot.send_message(config.vuvod, f"–í—ã–≤–æ–¥ –æ—Ç: {name}\n"\
                f"–ß–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {userid}\n"\
                    f"–°—É–º–º–∞ –Ω–∞ –≤—ã–≤–æ–¥: {sum2}\n"\
                        f"–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–æ—à–µ–ª—å–∫–∞: {num}", reply_markup=key)
            bot.send_message(message.chat.id, f"–ó–∞—è–≤–∫–∞ ‚Ññ{zayavka} –Ω–∞ –≤—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ \n"\
                f"–°—É–º–º–∞: {sum2}\n"\
                    f"–†–µ–∫–≤–∏–∑–∏—Ç—ã: {num}\n")

        else:
            bot.send_message(config.vuvod, f"–í—ã–≤–æ–¥ –æ—Ç: @{user_name}\n"\
                f"–ß–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {userid}\n"\
                    f"–°—É–º–º–∞ –Ω–∞ –≤—ã–≤–æ–¥: {sum2}\n"\
                        f"–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–æ—à–µ–ª—å–∫–∞: {num}", reply_markup=key)
            bot.send_message(message.chat.id, f"–ó–∞—è–≤–∫–∞ ‚Ññ{zayavka} –Ω–∞ –≤—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ \n"\
                f"–°—É–º–º–∞: {sum2}\n"\
                    f"–†–µ–∫–≤–∏–∑–∏—Ç—ã: {num}\n")
    
    except Exception as e:
        bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
            f"{e}")
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")


def output_num3(message, sum3):
    try:
        userid = str(message.chat.id)
        user_name = message.chat.username
        name = message.chat.first_name
        num = message.text
        now = datetime.now()
        now_date = str(str(now)[:16])
        zayavka = random.randint(1,10000000)
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        row = q.execute('SELECT * FROM info_vuvod WHERE chat_id IS ' + str(userid)).fetchone()
        q.execute("INSERT INTO info_vuvod (id, chat_id, summ, requisites) VALUES ('%s', '%s', '%s', '%s')"%(zayavka, userid, sum3, num))
        q.execute("INSERT INTO trans (zayavka, data1, summ) VALUES ('%s', '%s', '%s')"%(zayavka, now_date, sum3))
        connect.commit()
        usr = bot.get_chat_member(message.chat.id, message.from_user.id)
        
        q.execute("SELECT balance FROM profile_info where id is " + userid)
        balik = q.fetchone()[0]
        q.execute(f"update profile_info set balance = balance - '{sum3}' where id = '{userid}'")
        connect.commit()
        key = types.InlineKeyboardMarkup(row_width=2)
        done = types.InlineKeyboardButton("–í—ã–ø–ª–∞—á–µ–Ω–æ", callback_data="done1_{}".format(zayavka))
        key.row(done)

        if not usr.user.username:
            bot.send_message(config.vuvod, f"–í—ã–≤–æ–¥ –æ—Ç: {name}\n"\
                f"–ß–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {userid}\n"\
                    f"–°—É–º–º–∞ –Ω–∞ –≤—ã–≤–æ–¥: {sum3}\n"\
                        f"–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–æ—à–µ–ª—å–∫–∞: {num}", reply_markup=key)
            bot.send_message(message.chat.id, f"–ó–∞—è–≤–∫–∞ ‚Ññ{zayavka} –Ω–∞ –≤—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ \n"\
                f"–°—É–º–º–∞: {sum3}\n"\
                    f"–†–µ–∫–≤–∏–∑–∏—Ç—ã: {num}\n")

        else:
            bot.send_message(config.vuvod, f"–í—ã–≤–æ–¥ –æ—Ç: @{user_name}\n"\
                f"–ß–∞—Ç –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {userid}\n"\
                    f"–°—É–º–º–∞ –Ω–∞ –≤—ã–≤–æ–¥: {sum3}\n"\
                        f"–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–æ—à–µ–ª—å–∫–∞: {num}", reply_markup=key)
            bot.send_message(message.chat.id, f"–ó–∞—è–≤–∫–∞ ‚Ññ{zayavka} –Ω–∞ –≤—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ \n"\
                f"–°—É–º–º–∞: {sum3}\n"\
                    f"–†–µ–∫–≤–∏–∑–∏—Ç—ã: {num}\n")
    
    except Exception as e:
        bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
            f"{e}")
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")


def register_partner(message):
    user_id = message.chat.id
    name  = message.chat.first_name
    if "https" in message.text or "http" in message.text:
        link = message.text
        request = types.InlineKeyboardMarkup()
        confirm = types.InlineKeyboardButton("–û–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫–∞", callback_data="reqconf_{}_{}".format(user_id, name))
        cenc_conf = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="qeccenc_{}_{}".format(user_id,name))
        request.row(confirm, cenc_conf)


        bot.send_message(message.chat.id, "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞\n–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏")
        bot.send_message(config.vuvod, f"–ó–∞–≤—è–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ –æ—Ç {name}\n"\
            f"–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ—Å—É—Ä—Å: {link}",disable_web_page_preview=True, parse_mode="html", reply_markup=request)
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É!")


def count_main(message):
    inv = message.text
    if inv.isdigit():
        inv = int(inv)
        day = inv * 0.05
        month = day * 30
        year = month * 12
        bot.send_message(message.chat.id, "–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –º—ã —Ä–∞—Å—Å—á–∏—Ç–∞–ª–∏ –≤–∞—à—É –ø—Ä–∏–±—ã–ª—å –æ—Ç —Å—É–º–º—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏:\n\n"\
            f"üíµ –í–∞—à–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è: {inv} ‚ÇΩ\n"\
                f"‚ûï –ü—Ä–∏–±—ã–ª—å –≤ —Å—É—Ç–∫–∏: {day} ‚ÇΩ\n"\
                    f"‚ûï –ü—Ä–∏–±—ã–ª—å –≤ –º–µ—Å—è—Ü: {month} ‚ÇΩ\n"\
                        f"‚ûï –ü—Ä–∏–±—ã–ª—å –≤ –≥–æ–¥: {year} ‚ÇΩ\n\n"\
                            "<b>–¢–µ–∫—É—â–∞—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 5 % –≤ –¥–µ–Ω—å</b>", parse_mode='html')
    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –Ω–µ –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞. –ó–∞–∫—Ä—ã–≤–∞—é —Ä–∞—Å—á–µ—Ç")

def count_trade(message):
    inv = message.text
    if inv.isdigit():
        inv = int(inv)
        percent = random.randint(1,15)
        inf = percent
        percent = percent / 100
        day = int(inv * percent)
        month = int(day * 30)
        year = int(month * 12)
        bot.send_message(message.chat.id, "–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –º—ã —Ä–∞—Å—Å—á–∏—Ç–∞–ª–∏ –≤–∞—à—É –ø—Ä–∏–±—ã–ª—å –æ—Ç —Å—É–º–º—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏:\n\n"\
            f"üíµ –í–∞—à–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è: {inv} ‚ÇΩ\n"\
                f"‚ûï –ü—Ä–∏–±—ã–ª—å –≤ —Å—É—Ç–∫–∏: {day} ‚ÇΩ\n"\
                    f"‚ûï –ü—Ä–∏–±—ã–ª—å –≤ –º–µ—Å—è—Ü: {month} ‚ÇΩ\n"\
                        f"‚ûï –ü—Ä–∏–±—ã–ª—å –≤ –≥–æ–¥: {year} ‚ÇΩ\n\n"\
                            f"<b>–¢–µ–∫—É—â–∞—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞: {inf}% –≤ –¥–µ–Ω—å</b>", parse_mode='html')
    else:
        bot.send_message(message.chat.id, "‚õîÔ∏è –í—ã –Ω–µ –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞. –ó–∞–∫—Ä—ã–≤–∞—é —Ä–∞—Å—á–µ—Ç")

def accmain(message):
    if message.text.isdigit():
        if int(message.text) <= 5:
            try:
                connect = sqlite3.connect('bot.db')
                q = connect.cursor()
                percent = int(message.text) / 100
                result = q.execute("SELECT id FROM info_deposit").fetchall()
                cnt = 0
                for i in result:
                    balik1 = q.execute("SELECT deposit_to_maining FROM info_deposit where id is " + str(i[0])).fetchone()[0]
                    if int(balik1) > 0:
                        balik1 = int(int(balik1) * percent)
                        q.execute(f"update profile_info set balance = balance + '{balik1}' where id = '{i[0]}'")
                        connect.commit()
                        cnt += 1
                        try:
                            bot.send_message(i[0], f"<b>–°–µ–≥–æ–¥–Ω—è –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ {message.text}% –æ—Ç –≤–∞—à–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ –º–∞–π–Ω–∏–Ω–≥ {balik1}‚ÇΩ</b>", parse_mode='html')
                        except Exception as e:
                            bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
                                f"{e}")
                            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –Ω–∞—á–∏—Å–ª–µ–Ω–∏—é")
                        time.sleep(0.3)

                bot.send_message(message.chat.id, f"<b>–ù–∞—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ</b>\n\n{cnt} —á–µ–ª–æ–≤–µ–∫ –ø–æ–ª—É—á–∏–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤ —Ä–∞–∑–º–µ—Ä–µ {message.text}% –æ—Ç —Å—É–º–º—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",parse_mode='html')
            except Exception as e:
                bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
                    f"{e}")
                bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
                    
        else:
            bot.send_message(message.chat.id,"–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π % –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ 5%\n"\
                "<b>–ó–∞–∫—Ä–∏–≤–∞—é –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è</b>", parse_mode='html')
            
    else:
        bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!, –ó–∞–∫—Ä–∏–≤–∞—é –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è")

def acctraid(message):
    if message.text.isdigit():
        try:
            if int(message.text) <= 15:
                connect = sqlite3.connect('bot.db')
                q = connect.cursor()
                percent = int(message.text) / 100
                result = q.execute("SELECT id FROM info_deposit").fetchall()
                cnt = 0
                for i in result:
                    balik1 = q.execute("SELECT deposit_to_traiding FROM info_deposit where id is " + str(i[0])).fetchone()[0]
                    if int(balik1) > 0:
                        balik1 = int(int(balik1) * percent)
                        q.execute(f"update profile_info set balance = balance + '{balik1}' where id = '{i[0]}'")
                        connect.commit()
                        cnt += 1
                        try:
                            bot.send_message(i[0], f"<b>–°–µ–≥–æ–¥–Ω—è –±—ã–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–æ {message.text}% –æ—Ç –≤–∞—à–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ —Ç—Ä–µ–π–¥–∏–Ω–≥ {balik1}‚ÇΩ</b>", parse_mode='html')
                        except Exception as e:
                            bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
                                f"{e}")
                            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –Ω–∞—á–∏—Å–ª–µ–Ω–∏—é")
                        time.sleep(0.3)

                bot.send_message(message.chat.id, f"<b>–ù–∞—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ</b>\n\n{cnt} —á–µ–ª–æ–≤–µ–∫ –ø–æ–ª—É—á–∏–ª–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤ —Ä–∞–∑–º–µ—Ä–µ {message.text}% –æ—Ç —Å—É–º–º—ã –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",parse_mode='html')
                    
            else:
                bot.send_message(message.chat.id,"–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π % –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ 15%\n"\
                    "<b>–ó–∞–∫—Ä–∏–≤–∞—é –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è</b>", parse_mode='html')
        except Exception as e:
            bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
                f"{e}")
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
    else:
        bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!, –ó–∞–∫—Ä–∏–≤–∞—é –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è")

def reset_key(message):
    try:
        token = message.text
        connect = sqlite3.connect('bot.db')
        q = connect.cursor()
        key = q.execute("SELECT * FROM qiwi_key").fetchone()
        if key is None:
            q.execute("INSERT INTO qiwi_key(qiwi) VALUES ('%s')"%(token))
            connect.commit()
            bot.send_message(message.chat.id, "–∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ")
        else:
            q.execute("DELETE FROM qiwi_key")
            connect.commit()
            q.execute("INSERT INTO qiwi_key(qiwi) VALUES ('%s')"%(token))
            connect.commit()
            bot.send_message(message.chat.id, "–∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞!!!\n"\
            f"{e}")
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")

while True:
    try:
        bot.polling(none_stop=True)

    except Exception as e:
        bot.send_message(config.error_chat, "!!!–û—à–∏–±–∫–∞ 1266!!!\n"\
            f"{e}")
        time.sleep(15)
        


